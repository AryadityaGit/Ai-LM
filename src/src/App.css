/* ... keep your existing CSS ... */

/* Add these styles for PDF generation */
@layer utilities {
    .prose {
        --tw-prose-body: var(--foreground);
        --tw-prose-headings: var(--foreground);
        --tw-prose-lead: var(--muted-foreground);
        --tw-prose-links: var(--primary);
        --tw-prose-bold: var(--foreground);
        --tw-prose-counters: var(--muted-foreground);
        --tw-prose-bullets: var(--muted-foreground);
        --tw-prose-hr: var(--border);
        --tw-prose-quotes: var(--foreground);
        --tw-prose-quote-borders: var(--border);
        --tw-prose-captions: var(--muted-foreground);
        --tw-prose-code: var(--primary);
        --tw-prose-pre-code: var(--primary-foreground);
        --tw-prose-pre-bg: var(--primary);
        --tw-prose-th-borders: var(--border);
        --tw-prose-td-borders: var(--border);
    }
    .dark .prose {
        --tw-prose-body: var(--foreground);
        --tw-prose-headings: var(--foreground);
        /* ... add other dark mode prose variables if needed ... */
    }
}

body.printing {
  background-color: white; /* Ensure a white background for the canvas */
}

/* Ensure the content is styled correctly when being captured */
#printable-article {
    color: black;
}```

---

### How to Run It

1.  Make sure you have placed all the files in the correct directories as outlined in the structure.
2.  Run `npm install` to get all the base dependencies.
3.  Run `npm install html2canvas jspdf` if you haven't already.
4.  Start the development server with `npm run dev`.

You should now see a clean UI with an input field. When you enter a URL and click "Fetch Article," it will simulate an API call and then display the formatted article with options to select a page layout and save it as a PDF.